{"ast":null,"code":"// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupItems, searchItems, fillArray } from '../../util/helpers';\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'v-data',\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    sortBy: {\n      type: [String, Array]\n    },\n    sortDesc: {\n      type: [Boolean, Array]\n    },\n    customSort: {\n      type: Function,\n      default: sortItems\n    },\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10\n    },\n    groupBy: {\n      type: [String, Array],\n      default: () => []\n    },\n    groupDesc: {\n      type: [Boolean, Array],\n      default: () => []\n    },\n    customGroup: {\n      type: Function,\n      default: groupItems\n    },\n    locale: {\n      type: String,\n      default: 'en-US'\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      default: searchItems\n    },\n    serverItemsLength: {\n      type: Number,\n      default: -1\n    }\n  },\n\n  data() {\n    let internalOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort\n    };\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options);\n    }\n\n    const {\n      sortBy,\n      sortDesc,\n      groupBy,\n      groupDesc\n    } = internalOptions;\n    const sortDiff = sortBy.length - sortDesc.length;\n    const groupDiff = groupBy.length - groupDesc.length;\n\n    if (sortDiff > 0) {\n      internalOptions.sortDesc.push(...fillArray(sortDiff, false));\n    }\n\n    if (groupDiff > 0) {\n      internalOptions.groupDesc.push(...fillArray(groupDiff, false));\n    }\n\n    return {\n      internalOptions\n    };\n  },\n\n  computed: {\n    itemsLength() {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length;\n    },\n\n    pageCount() {\n      return this.internalOptions.itemsPerPage <= 0 ? 1 : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage);\n    },\n\n    pageStart() {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0;\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage;\n    },\n\n    pageStop() {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength;\n      if (!this.items.length) return 0;\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage);\n    },\n\n    isGrouped() {\n      return !!this.internalOptions.groupBy.length;\n    },\n\n    pagination() {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength\n      };\n    },\n\n    filteredItems() {\n      let items = this.items.slice();\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search);\n      }\n\n      return items;\n    },\n\n    computedItems() {\n      let items = this.filteredItems.slice();\n\n      if ((!this.disableSort || this.internalOptions.groupBy.length) && this.serverItemsLength <= 0) {\n        items = this.sortItems(items);\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items);\n      }\n\n      return items;\n    },\n\n    groupedItems() {\n      return this.isGrouped ? this.groupItems(this.computedItems) : null;\n    },\n\n    scopedProps() {\n      return {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length\n      };\n    },\n\n    computedOptions() {\n      return { ...this.options\n      };\n    }\n\n  },\n  watch: {\n    computedOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.updateOptions(options);\n      },\n\n      deep: true,\n      immediate: true\n    },\n    internalOptions: {\n      handler(options, old) {\n        if (deepEqual(options, old)) return;\n        this.$emit('update:options', options);\n      },\n\n      deep: true,\n      immediate: true\n    },\n\n    page(page) {\n      this.updateOptions({\n        page\n      });\n    },\n\n    'internalOptions.page'(page) {\n      this.$emit('update:page', page);\n    },\n\n    itemsPerPage(itemsPerPage) {\n      this.updateOptions({\n        itemsPerPage\n      });\n    },\n\n    'internalOptions.itemsPerPage'(itemsPerPage) {\n      this.$emit('update:items-per-page', itemsPerPage);\n    },\n\n    sortBy(sortBy) {\n      this.updateOptions({\n        sortBy: wrapInArray(sortBy)\n      });\n    },\n\n    'internalOptions.sortBy'(sortBy, old) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0]);\n    },\n\n    sortDesc(sortDesc) {\n      this.updateOptions({\n        sortDesc: wrapInArray(sortDesc)\n      });\n    },\n\n    'internalOptions.sortDesc'(sortDesc, old) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0]);\n    },\n\n    groupBy(groupBy) {\n      this.updateOptions({\n        groupBy: wrapInArray(groupBy)\n      });\n    },\n\n    'internalOptions.groupBy'(groupBy, old) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0]);\n    },\n\n    groupDesc(groupDesc) {\n      this.updateOptions({\n        groupDesc: wrapInArray(groupDesc)\n      });\n    },\n\n    'internalOptions.groupDesc'(groupDesc, old) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0]);\n    },\n\n    multiSort(multiSort) {\n      this.updateOptions({\n        multiSort\n      });\n    },\n\n    'internalOptions.multiSort'(multiSort) {\n      this.$emit('update:multi-sort', multiSort);\n    },\n\n    mustSort(mustSort) {\n      this.updateOptions({\n        mustSort\n      });\n    },\n\n    'internalOptions.mustSort'(mustSort) {\n      this.$emit('update:must-sort', mustSort);\n    },\n\n    pageCount: {\n      handler(pageCount) {\n        this.$emit('page-count', pageCount);\n      },\n\n      immediate: true\n    },\n    computedItems: {\n      handler(computedItems) {\n        this.$emit('current-items', computedItems);\n      },\n\n      immediate: true\n    },\n    pagination: {\n      handler(pagination, old) {\n        if (deepEqual(pagination, old)) return;\n        this.$emit('pagination', this.pagination);\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    toggle(key, oldBy, oldDesc, page, mustSort, multiSort) {\n      let by = oldBy.slice();\n      let desc = oldDesc.slice();\n      const byIndex = by.findIndex(k => k === key);\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = [];\n          desc = [];\n        }\n\n        by.push(key);\n        desc.push(false);\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true;\n      } else if (!mustSort) {\n        by.splice(byIndex, 1);\n        desc.splice(byIndex, 1);\n      } else {\n        desc[byIndex] = false;\n      } // Reset page to 1 if sortBy or sortDesc have changed\n\n\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1;\n      }\n\n      return {\n        by,\n        desc,\n        page\n      };\n    },\n\n    group(key) {\n      const {\n        by: groupBy,\n        desc: groupDesc,\n        page\n      } = this.toggle(key, this.internalOptions.groupBy, this.internalOptions.groupDesc, this.internalOptions.page, true, false);\n      this.updateOptions({\n        groupBy,\n        groupDesc,\n        page\n      });\n    },\n\n    sort(key) {\n      if (Array.isArray(key)) return this.sortArray(key);\n      const {\n        by: sortBy,\n        desc: sortDesc,\n        page\n      } = this.toggle(key, this.internalOptions.sortBy, this.internalOptions.sortDesc, this.internalOptions.page, this.internalOptions.mustSort, this.internalOptions.multiSort);\n      this.updateOptions({\n        sortBy,\n        sortDesc,\n        page\n      });\n    },\n\n    sortArray(sortBy) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex(k => k === s);\n        return i > -1 ? this.internalOptions.sortDesc[i] : false;\n      });\n      this.updateOptions({\n        sortBy,\n        sortDesc\n      });\n    },\n\n    updateOptions(options) {\n      this.internalOptions = { ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0 ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount)) : options.page || this.internalOptions.page\n      };\n    },\n\n    sortItems(items) {\n      let sortBy = [];\n      let sortDesc = [];\n\n      if (!this.disableSort) {\n        sortBy = this.internalOptions.sortBy;\n        sortDesc = this.internalOptions.sortDesc;\n      }\n\n      if (this.internalOptions.groupBy.length) {\n        sortBy = [...this.internalOptions.groupBy, ...sortBy];\n        sortDesc = [...this.internalOptions.groupDesc, ...sortDesc];\n      }\n\n      return this.customSort(items, sortBy, sortDesc, this.locale);\n    },\n\n    groupItems(items) {\n      return this.customGroup(items, this.internalOptions.groupBy, this.internalOptions.groupDesc);\n    },\n\n    paginateItems(items) {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (this.serverItemsLength === -1 && items.length <= this.pageStart) {\n        this.internalOptions.page = Math.max(1, Math.ceil(items.length / this.internalOptions.itemsPerPage)) || 1; // Prevent NaN\n      }\n\n      return items.slice(this.pageStart, this.pageStop);\n    }\n\n  },\n\n  render() {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["wrapInArray","sortItems","deepEqual","groupItems","searchItems","fillArray","Vue","extend","name","inheritAttrs","props","items","type","Array","default","options","Object","sortBy","String","sortDesc","Boolean","customSort","Function","mustSort","multiSort","page","Number","itemsPerPage","groupBy","groupDesc","customGroup","locale","disableSort","disablePagination","disableFiltering","search","customFilter","serverItemsLength","data","internalOptions","assign","sortDiff","length","groupDiff","push","computed","itemsLength","filteredItems","pageCount","Math","ceil","pageStart","pageStop","min","isGrouped","pagination","slice","computedItems","paginateItems","groupedItems","scopedProps","sort","sortArray","group","updateOptions","originalItemsLength","computedOptions","watch","handler","old","deep","immediate","$emit","isArray","methods","toggle","key","oldBy","oldDesc","by","desc","byIndex","findIndex","k","splice","map","s","i","max","render","$scopedSlots"],"sourceRoot":"","sources":["../../../src/components/VData/VData.ts"],"sourcesContent":["// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupItems, searchItems, fillArray } from '../../util/helpers'\nimport Vue, { VNode } from 'vue'\n\n// Types\nimport {\n  DataOptions,\n  DataPagination,\n  DataScopeProps,\n  DataSortFunction,\n  DataGroupFunction,\n  DataSearchFunction,\n  ItemGroup,\n} from 'vuetify/types'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Vue.extend({\n  name: 'v-data',\n\n  inheritAttrs: false,\n\n  props: {\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    options: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Partial<DataOptions>>,\n    sortBy: {\n      type: [String, Array],\n    } as PropValidator<string | string[] | undefined>,\n    sortDesc: {\n      type: [Boolean, Array],\n    } as PropValidator<boolean | boolean[] | undefined>,\n    customSort: {\n      type: Function,\n      default: sortItems,\n    } as PropValidator<DataSortFunction>,\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1,\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10,\n    },\n    groupBy: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<string | string[]>,\n    groupDesc: {\n      type: [Boolean, Array],\n      default: () => [],\n    } as PropValidator<boolean | boolean[]>,\n    customGroup: {\n      type: Function,\n      default: groupItems,\n    } as PropValidator<DataGroupFunction>,\n    locale: {\n      type: String,\n      default: 'en-US',\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function,\n      default: searchItems,\n    } as PropValidator<DataSearchFunction>,\n    serverItemsLength: {\n      type: Number,\n      default: -1,\n    },\n  },\n\n  data () {\n    let internalOptions: DataOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort,\n    }\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options)\n    }\n\n    const { sortBy, sortDesc, groupBy, groupDesc } = internalOptions\n    const sortDiff = sortBy.length - sortDesc.length\n    const groupDiff = groupBy.length - groupDesc.length\n\n    if (sortDiff > 0) {\n      internalOptions.sortDesc.push(...fillArray(sortDiff, false))\n    }\n\n    if (groupDiff > 0) {\n      internalOptions.groupDesc.push(...fillArray(groupDiff, false))\n    }\n\n    return {\n      internalOptions,\n    }\n  },\n\n  computed: {\n    itemsLength (): number {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length\n    },\n    pageCount (): number {\n      return this.internalOptions.itemsPerPage <= 0\n        ? 1\n        : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage)\n    },\n    pageStart (): number {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0\n\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage\n    },\n    pageStop (): number {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength\n      if (!this.items.length) return 0\n\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage)\n    },\n    isGrouped (): boolean {\n      return !!this.internalOptions.groupBy.length\n    },\n    pagination (): DataPagination {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength,\n      }\n    },\n    filteredItems (): any[] {\n      let items = this.items.slice()\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search)\n      }\n\n      return items\n    },\n    computedItems (): any[] {\n      let items = this.filteredItems.slice()\n\n      if ((!this.disableSort || this.internalOptions.groupBy.length) && this.serverItemsLength <= 0) {\n        items = this.sortItems(items)\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items)\n      }\n\n      return items\n    },\n    groupedItems (): ItemGroup<any>[] | null {\n      return this.isGrouped ? this.groupItems(this.computedItems) : null\n    },\n    scopedProps (): DataScopeProps {\n      return {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length,\n      }\n    },\n    computedOptions (): DataOptions {\n      return { ...this.options } as DataOptions\n    },\n  },\n\n  watch: {\n    computedOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n\n        this.updateOptions(options)\n      },\n      deep: true,\n      immediate: true,\n    },\n    internalOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n        this.$emit('update:options', options)\n      },\n      deep: true,\n      immediate: true,\n    },\n    page (page: number) {\n      this.updateOptions({ page })\n    },\n    'internalOptions.page' (page: number) {\n      this.$emit('update:page', page)\n    },\n    itemsPerPage (itemsPerPage: number) {\n      this.updateOptions({ itemsPerPage })\n    },\n    'internalOptions.itemsPerPage' (itemsPerPage: number) {\n      this.$emit('update:items-per-page', itemsPerPage)\n    },\n    sortBy (sortBy: string | string[]) {\n      this.updateOptions({ sortBy: wrapInArray(sortBy) })\n    },\n    'internalOptions.sortBy' (sortBy: string[], old: string[]) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0])\n    },\n    sortDesc (sortDesc: boolean | boolean[]) {\n      this.updateOptions({ sortDesc: wrapInArray(sortDesc) })\n    },\n    'internalOptions.sortDesc' (sortDesc: boolean[], old: boolean[]) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0])\n    },\n    groupBy (groupBy: string | string[]) {\n      this.updateOptions({ groupBy: wrapInArray(groupBy) })\n    },\n    'internalOptions.groupBy' (groupBy: string[], old: string[]) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0])\n    },\n    groupDesc (groupDesc: boolean | boolean[]) {\n      this.updateOptions({ groupDesc: wrapInArray(groupDesc) })\n    },\n    'internalOptions.groupDesc' (groupDesc: boolean[], old: boolean[]) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0])\n    },\n    multiSort (multiSort: boolean) {\n      this.updateOptions({ multiSort })\n    },\n    'internalOptions.multiSort' (multiSort: boolean) {\n      this.$emit('update:multi-sort', multiSort)\n    },\n    mustSort (mustSort: boolean) {\n      this.updateOptions({ mustSort })\n    },\n    'internalOptions.mustSort' (mustSort: boolean) {\n      this.$emit('update:must-sort', mustSort)\n    },\n    pageCount: {\n      handler (pageCount: number) {\n        this.$emit('page-count', pageCount)\n      },\n      immediate: true,\n    },\n    computedItems: {\n      handler (computedItems: any[]) {\n        this.$emit('current-items', computedItems)\n      },\n      immediate: true,\n    },\n    pagination: {\n      handler (pagination: DataPagination, old: DataPagination) {\n        if (deepEqual(pagination, old)) return\n        this.$emit('pagination', this.pagination)\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    toggle (key: string, oldBy: string[], oldDesc: boolean[], page: number, mustSort: boolean, multiSort: boolean) {\n      let by = oldBy.slice()\n      let desc = oldDesc.slice()\n      const byIndex = by.findIndex((k: string) => k === key)\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = []\n          desc = []\n        }\n\n        by.push(key)\n        desc.push(false)\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true\n      } else if (!mustSort) {\n        by.splice(byIndex, 1)\n        desc.splice(byIndex, 1)\n      } else {\n        desc[byIndex] = false\n      }\n\n      // Reset page to 1 if sortBy or sortDesc have changed\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1\n      }\n\n      return { by, desc, page }\n    },\n    group (key: string): void {\n      const { by: groupBy, desc: groupDesc, page } = this.toggle(\n        key,\n        this.internalOptions.groupBy,\n        this.internalOptions.groupDesc,\n        this.internalOptions.page,\n        true,\n        false\n      )\n      this.updateOptions({ groupBy, groupDesc, page })\n    },\n    sort (key: string | string[]): void {\n      if (Array.isArray(key)) return this.sortArray(key)\n\n      const { by: sortBy, desc: sortDesc, page } = this.toggle(\n        key,\n        this.internalOptions.sortBy,\n        this.internalOptions.sortDesc,\n        this.internalOptions.page,\n        this.internalOptions.mustSort,\n        this.internalOptions.multiSort\n      )\n      this.updateOptions({ sortBy, sortDesc, page })\n    },\n    sortArray (sortBy: string[]) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex((k: string) => k === s)\n        return i > -1 ? this.internalOptions.sortDesc[i] : false\n      })\n\n      this.updateOptions({ sortBy, sortDesc })\n    },\n    updateOptions (options: any) {\n      this.internalOptions = {\n        ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0\n          ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount))\n          : options.page || this.internalOptions.page,\n      }\n    },\n    sortItems (items: any[]): any[] {\n      let sortBy: string[] = []\n      let sortDesc: boolean[] = []\n\n      if (!this.disableSort) {\n        sortBy = this.internalOptions.sortBy\n        sortDesc = this.internalOptions.sortDesc\n      }\n\n      if (this.internalOptions.groupBy.length) {\n        sortBy = [...this.internalOptions.groupBy, ...sortBy]\n        sortDesc = [...this.internalOptions.groupDesc, ...sortDesc]\n      }\n\n      return this.customSort(items, sortBy, sortDesc, this.locale)\n    },\n    groupItems (items: any[]): ItemGroup<any>[] {\n      return this.customGroup(items, this.internalOptions.groupBy, this.internalOptions.groupDesc)\n    },\n    paginateItems (items: any[]): any[] {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (this.serverItemsLength === -1 && items.length <= this.pageStart) {\n        this.internalOptions.page = Math.max(1, Math.ceil(items.length / this.internalOptions.itemsPerPage)) || 1 // Prevent NaN\n      }\n\n      return items.slice(this.pageStart, this.pageStop)\n    },\n  },\n\n  render (): VNode {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps) as any\n  },\n})\n"]},"metadata":{},"sourceType":"module"}