{"ast":null,"code":"// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\";\nimport \"../../../src/components/VSelect/VSelect.sass\"; // Components\n\nimport VChip from '../VChip';\nimport VMenu from '../VMenu';\nimport VSelectList from './VSelectList'; // Extensions\n\nimport VInput from '../VInput';\nimport VTextField from '../VTextField/VTextField'; // Mixins\n\nimport Comparable from '../../mixins/comparable';\nimport Dependent from '../../mixins/dependent';\nimport Filterable from '../../mixins/filterable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers';\nimport { consoleError } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304\n}; // Types\n\nconst baseMixins = mixins(VTextField, Comparable, Dependent, Filterable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-select',\n  directives: {\n    ClickOutside\n  },\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown'\n    },\n    attach: {\n      type: null,\n      default: false\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    itemColor: {\n      type: String,\n      default: 'primary'\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled'\n    },\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text'\n    },\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value'\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean\n  },\n\n  data() {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined ? this.value : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0\n    };\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems() {\n      return this.filterDuplicates(this.cachedItems.concat(this.items));\n    },\n\n    classes() {\n      return { ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple\n      };\n    },\n\n    /* Used by other components to overwrite */\n    computedItems() {\n      return this.allItems;\n    },\n\n    computedOwns() {\n      return `list-${this._uid}`;\n    },\n\n    computedCounterValue() {\n      const value = this.multiple ? this.selectedItems : (this.getText(this.selectedItems[0]) || '').toString();\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value);\n      }\n\n      return value.length;\n    },\n\n    directives() {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements()\n        }\n      }] : undefined;\n    },\n\n    dynamicHeight() {\n      return 'auto';\n    },\n\n    hasChips() {\n      return this.chips || this.smallChips;\n    },\n\n    hasSlot() {\n      return Boolean(this.hasChips || this.$scopedSlots.selection);\n    },\n\n    isDirty() {\n      return this.selectedItems.length > 0;\n    },\n\n    listData() {\n      const scopeId = this.$vnode && this.$vnode.context.$options._scopeId;\n      const attrs = scopeId ? {\n        [scopeId]: true\n      } : {};\n      return {\n        attrs: { ...attrs,\n          id: this.computedOwns\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems\n        },\n        on: {\n          select: this.selectItem\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item\n        }\n      };\n    },\n\n    staticList() {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used');\n      }\n\n      return this.$createElement(VSelectList, this.listData);\n    },\n\n    virtualizedItems() {\n      return this.$_menuProps.auto ? this.computedItems : this.computedItems.slice(0, this.lastItem);\n    },\n\n    menuCanShow: () => true,\n\n    $_menuProps() {\n      let normalisedProps = typeof this.menuProps === 'string' ? this.menuProps.split(',') : this.menuProps;\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true;\n          return acc;\n        }, {});\n      }\n\n      return { ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0,\n        ...normalisedProps\n      };\n    }\n\n  },\n  watch: {\n    internalValue(val) {\n      this.initialValue = val;\n      this.setSelectedItems();\n    },\n\n    isMenuActive(val) {\n      window.setTimeout(() => this.onMenuActiveChange(val));\n    },\n\n    items: {\n      immediate: true,\n\n      handler(val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val));\n          });\n        }\n\n        this.setSelectedItems();\n      }\n\n    }\n  },\n  methods: {\n    /** @public */\n    blur(e) {\n      VTextField.options.methods.blur.call(this, e);\n      this.isMenuActive = false;\n      this.isFocused = false;\n      this.selectedIndex = -1;\n      this.setMenuIndex(-1);\n    },\n\n    /** @public */\n    activateMenu() {\n      if (!this.isInteractive || this.isMenuActive) return;\n      this.isMenuActive = true;\n    },\n\n    clearableCallback() {\n      this.setValue(this.multiple ? [] : null);\n      this.setMenuIndex(-1);\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus());\n      if (this.openOnClear) this.isMenuActive = true;\n    },\n\n    closeConditional(e) {\n      if (!this.isMenuActive) return true;\n      return !this._isDestroyed && ( // Click originates from outside the menu content\n      // Multiple selects don't close when an item is clicked\n      !this.getContent() || !this.getContent().contains(e.target)) && // Click originates from outside the element\n      this.$el && !this.$el.contains(e.target) && e.target !== this.$el;\n    },\n\n    filterDuplicates(arr) {\n      const uniqueValues = new Map();\n\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]; // Do not return null values if existant (#14421)\n\n        if (item == null) {\n          continue;\n        } // Do not deduplicate headers or dividers (#12517)\n\n\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item);\n          continue;\n        }\n\n        const val = this.getValue(item); // TODO: comparator\n\n        !uniqueValues.has(val) && uniqueValues.set(val, item);\n      }\n\n      return Array.from(uniqueValues.values());\n    },\n\n    findExistingIndex(item) {\n      const itemValue = this.getValue(item);\n      return (this.internalValue || []).findIndex(i => this.valueComparator(this.getValue(i), itemValue));\n    },\n\n    getContent() {\n      return this.$refs.menu && this.$refs.menu.$refs.content;\n    },\n\n    genChipSelection(item, index) {\n      const isDisabled = this.isDisabled || this.getDisabled(item);\n      const isInteractive = !isDisabled && this.isInteractive;\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: {\n          tabindex: -1\n        },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips\n        },\n        on: {\n          click: e => {\n            if (!isInteractive) return;\n            e.stopPropagation();\n            this.selectedIndex = index;\n          },\n          'click:close': () => this.onChipInput(item)\n        },\n        key: JSON.stringify(this.getValue(item))\n      }, this.getText(item));\n    },\n\n    genCommaSelection(item, index, last) {\n      const color = index === this.selectedIndex && this.computedColor;\n      const isDisabled = this.isDisabled || this.getDisabled(item);\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled\n        },\n        key: JSON.stringify(this.getValue(item))\n      }), `${this.getText(item)}${last ? '' : ', '}`);\n    },\n\n    genDefaultSlot() {\n      const selections = this.genSelections();\n      const input = this.genInput(); // If the return is an empty array\n      // push the input\n\n      if (Array.isArray(selections)) {\n        selections.push(input); // Otherwise push it into children\n      } else {\n        selections.children = selections.children || [];\n        selections.children.push(input);\n      }\n\n      return [this.genFieldset(), this.$createElement('div', {\n        staticClass: 'v-select__slot',\n        directives: this.directives\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, selections, this.suffix ? this.genAffix('suffix') : null, this.genClearIcon(), this.genIconSlot(), this.genHiddenInput()]), this.genMenu(), this.genProgress()];\n    },\n\n    genIcon(type, cb, extraData) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData);\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children[0].data = mergeData(icon.children[0].data, {\n          attrs: {\n            tabindex: icon.children[0].componentOptions.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined\n          }\n        });\n      }\n\n      return icon;\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data = mergeData(input.data, {\n        domProps: {\n          value: null\n        },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off'),\n          placeholder: !this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel) ? this.placeholder : undefined\n        },\n        on: {\n          keypress: this.onKeyPress\n        }\n      });\n      return input;\n    },\n\n    genHiddenInput() {\n      return this.$createElement('input', {\n        domProps: {\n          value: this.lazyValue\n        },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name\n        }\n      });\n    },\n\n    genInputSlot() {\n      const render = VTextField.options.methods.genInputSlot.call(this);\n      render.data.attrs = { ...render.data.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns\n      };\n      return render;\n    },\n\n    genList() {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot();\n      } else {\n        return this.staticList;\n      }\n    },\n\n    genListWithSlot() {\n      const slots = ['prepend-item', 'no-data', 'append-item'].filter(slotName => this.$slots[slotName]).map(slotName => this.$createElement('template', {\n        slot: slotName\n      }, this.$slots[slotName])); // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n\n      return this.$createElement(VSelectList, { ...this.listData\n      }, slots);\n    },\n\n    genMenu() {\n      const props = this.$_menuProps;\n      props.activator = this.$refs['input-slot']; // Attach to root el so that\n      // menu covers prepend/append icons\n\n      if ( // TODO: make this a computed property or helper or something\n      this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n      this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n      this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el;\n      } else {\n        props.attach = this.attach;\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: {\n          role: undefined\n        },\n        props,\n        on: {\n          input: val => {\n            this.isMenuActive = val;\n            this.isFocused = val;\n          },\n          scroll: this.onScroll\n        },\n        ref: 'menu'\n      }, [this.genList()]);\n    },\n\n    genSelections() {\n      let length = this.selectedItems.length;\n      const children = new Array(length);\n      let genSelection;\n\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection;\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection;\n      } else {\n        genSelection = this.genCommaSelection;\n      }\n\n      while (length--) {\n        children[length] = genSelection(this.selectedItems[length], length, length === children.length - 1);\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections'\n      }, children);\n    },\n\n    genSlotSelection(item, index) {\n      return this.$scopedSlots.selection({\n        attrs: {\n          class: 'v-chip--select'\n        },\n        parent: this,\n        item,\n        index,\n        select: e => {\n          e.stopPropagation();\n          this.selectedIndex = index;\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive\n      });\n    },\n\n    getMenuIndex() {\n      return this.$refs.menu ? this.$refs.menu.listIndex : -1;\n    },\n\n    getDisabled(item) {\n      return getPropertyFromItem(item, this.itemDisabled, false);\n    },\n\n    getText(item) {\n      return getPropertyFromItem(item, this.itemText, item);\n    },\n\n    getValue(item) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item));\n    },\n\n    onBlur(e) {\n      e && this.$emit('blur', e);\n    },\n\n    onChipInput(item) {\n      if (this.multiple) this.selectItem(item);else this.setValue(null); // If all items have been deleted,\n      // open `v-menu`\n\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true;\n      } else {\n        this.isMenuActive = false;\n      }\n\n      this.selectedIndex = -1;\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true;\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        this.$emit('focus');\n      }\n\n      this.$emit('click', e);\n    },\n\n    onEscDown(e) {\n      e.preventDefault();\n\n      if (this.isMenuActive) {\n        e.stopPropagation();\n        this.isMenuActive = false;\n      }\n    },\n\n    onKeyPress(e) {\n      if (this.multiple || !this.isInteractive || this.disableLookup) return;\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      const now = performance.now();\n\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = '';\n      }\n\n      this.keyboardLookupPrefix += e.key.toLowerCase();\n      this.keyboardLookupLastTime = now;\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString();\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix);\n      });\n      const item = this.allItems[index];\n\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5);\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        this.$nextTick(() => this.$refs.menu.getTiles());\n        setTimeout(() => this.setMenuIndex(index));\n      }\n    },\n\n    onKeyDown(e) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return;\n      const keyCode = e.keyCode;\n      const menu = this.$refs.menu;\n      this.$emit('keydown', e);\n      if (!menu) return; // If menu is active, allow default\n      // listIndex change from menu\n\n      if (this.isMenuActive && [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end, keyCodes.enter].includes(keyCode)) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e);\n          this.$emit('update:list-index', menu.listIndex);\n        });\n      } // If enter, space, open menu\n\n\n      if ([keyCodes.enter, keyCodes.space].includes(keyCode)) this.activateMenu(); // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n\n      if (!this.isMenuActive && [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)) return this.onUpDown(e); // If escape deactivate the menu\n\n      if (keyCode === keyCodes.esc) return this.onEscDown(e); // If tab - select item or close menu\n\n      if (keyCode === keyCodes.tab) return this.onTabDown(e); // If space preventDefault\n\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e);\n    },\n\n    onMenuActiveChange(val) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (this.multiple && !val || this.getMenuIndex() > -1) return;\n      const menu = this.$refs.menu;\n      if (!menu || !this.isDirty) return; // When menu opens, set index of first active item\n\n      this.$refs.menu.getTiles();\n\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i);\n          break;\n        }\n      }\n    },\n\n    onMouseUp(e) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (this.hasMouseDown && e.which !== 3 && this.isInteractive) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => this.isMenuActive = !this.isMenuActive);\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e);\n    },\n\n    onScroll() {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => this.getContent().scrollTop = 0);\n      } else {\n        if (this.lastItem > this.computedItems.length) return;\n        const showMoreItems = this.getContent().scrollHeight - (this.getContent().scrollTop + this.getContent().clientHeight) < 200;\n\n        if (showMoreItems) {\n          this.lastItem += 20;\n        }\n      }\n    },\n\n    onSpaceDown(e) {\n      e.preventDefault();\n    },\n\n    onTabDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      const activeTile = menu.activeTile; // An item that is selected by\n      // menu-index should toggled\n\n      if (!this.multiple && activeTile && this.isMenuActive) {\n        e.preventDefault();\n        e.stopPropagation();\n        activeTile.click();\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e);\n      }\n    },\n\n    onUpDown(e) {\n      const menu = this.$refs.menu;\n      if (!menu) return;\n      e.preventDefault(); // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n\n      if (this.multiple) return this.activateMenu();\n      const keyCode = e.keyCode; // Cycle through available values to achieve\n      // select native behavior\n\n      menu.isBooted = true;\n      window.requestAnimationFrame(() => {\n        menu.getTiles();\n        if (!menu.hasClickableTiles) return this.activateMenu();\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile();\n            break;\n\n          case keyCodes.down:\n            menu.nextTile();\n            break;\n\n          case keyCodes.home:\n            menu.firstTile();\n            break;\n\n          case keyCodes.end:\n            menu.lastTile();\n            break;\n        }\n\n        this.selectItem(this.allItems[this.getMenuIndex()]);\n      });\n    },\n\n    selectItem(item) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item));\n        this.isMenuActive = false;\n      } else {\n        const internalValue = (this.internalValue || []).slice();\n        const i = this.findExistingIndex(item);\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item);\n        this.setValue(internalValue.map(i => {\n          return this.returnObject ? i : this.getValue(i);\n        })); // When selecting multiple\n        // adjust menu after each\n        // selection\n\n        this.$nextTick(() => {\n          this.$refs.menu && this.$refs.menu.updateDimensions();\n        }); // There is no item to re-highlight\n        // when selections are hidden\n\n        if (this.hideSelected) {\n          this.setMenuIndex(-1);\n        } else {\n          const index = this.allItems.indexOf(item);\n\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles());\n            setTimeout(() => this.setMenuIndex(index));\n          }\n        }\n      }\n    },\n\n    setMenuIndex(index) {\n      this.$refs.menu && (this.$refs.menu.listIndex = index);\n    },\n\n    setSelectedItems() {\n      const selectedItems = [];\n      const values = !this.multiple || !Array.isArray(this.internalValue) ? [this.internalValue] : this.internalValue;\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(this.getValue(v), this.getValue(value)));\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index]);\n        }\n      }\n\n      this.selectedItems = selectedItems;\n    },\n\n    setValue(value) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value;\n        this.$emit('change', value);\n      }\n    },\n\n    isAppendInner(target) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner'];\n      return appendInner && (appendInner === target || appendInner.contains(target));\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["VChip","VMenu","VSelectList","VInput","VTextField","Comparable","Dependent","Filterable","ClickOutside","mergeData","getPropertyFromItem","getObjectValueByPath","keyCodes","consoleError","mixins","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","extend","name","directives","props","appendIcon","type","String","default","attach","cacheItems","Boolean","chips","clearable","deletableChips","disableLookup","eager","hideSelected","items","Array","itemColor","itemDisabled","Function","itemText","itemValue","menuProps","Object","multiple","openOnClear","returnObject","smallChips","data","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","value","undefined","selectedIndex","selectedItems","keyboardLookupPrefix","keyboardLookupLastTime","computed","allItems","filterDuplicates","concat","classes","options","call","hasChips","computedItems","computedOwns","_uid","computedCounterValue","getText","toString","counterValue","length","isFocused","handler","blur","closeConditional","include","getOpenDependentElements","dynamicHeight","hasSlot","$scopedSlots","selection","isDirty","listData","scopeId","$vnode","context","$options","_scopeId","attrs","id","action","color","dense","virtualizedItems","noDataText","$vuetify","lang","t","on","select","selectItem","scopedSlots","item","staticList","$slots","$createElement","$_menuProps","auto","slice","menuCanShow","normalisedProps","split","isArray","reduce","acc","p","trim","nudgeBottom","offsetY","watch","internalValue","val","initialValue","setSelectedItems","window","setTimeout","onMenuActiveChange","immediate","$nextTick","methods","e","setMenuIndex","activateMenu","isInteractive","clearableCallback","setValue","$refs","input","focus","_isDestroyed","getContent","contains","target","$el","arr","uniqueValues","Map","index","header","divider","set","getValue","has","from","values","findExistingIndex","findIndex","i","valueComparator","menu","content","genChipSelection","isDisabled","getDisabled","staticClass","tabindex","close","disabled","inputValue","small","click","stopPropagation","onChipInput","key","JSON","stringify","genCommaSelection","last","computedColor","setTextColor","class","genDefaultSlot","selections","genSelections","genInput","push","children","genFieldset","genLabel","prefix","genAffix","suffix","genClearIcon","genIconSlot","genHiddenInput","genMenu","genProgress","genIcon","cb","extraData","icon","componentOptions","listeners","domProps","readonly","isReadonly","autocomplete","placeholder","persistentPlaceholder","hasLabel","keypress","onKeyPress","attrs$","genInputSlot","render","role","genList","genListWithSlot","slots","filter","slotName","map","slot","activator","scroll","onScroll","ref","genSelection","genSlotSelection","parent","selected","getMenuIndex","listIndex","onBlur","$emit","onClick","isAppendInner","onEscDown","preventDefault","KEYBOARD_LOOKUP_THRESHOLD","now","performance","toLowerCase","text","startsWith","Math","max","getTiles","onKeyDown","keyCode","tab","up","down","home","end","enter","includes","changeListIndex","space","onUpDown","esc","onTabDown","onSpaceDown","tiles","getAttribute","onMouseUp","hasMouseDown","which","requestAnimationFrame","scrollTop","showMoreItems","scrollHeight","clientHeight","activeTile","isBooted","hasClickableTiles","prevTile","nextTile","firstTile","lastTile","splice","updateDimensions","indexOf","v","appendInner"],"sourceRoot":"","sources":["../../../src/components/VSelect/VSelect.ts"],"sourcesContent":["// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not return null values if existant (#14421)\n        if (item == null) {\n          continue\n        }\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end, keyCodes.enter].includes(keyCode)) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}