{"ast":null,"code":"// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide() {\n    return {\n      form: this\n    };\n  },\n\n  inheritAttrs: false,\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean\n  },\n  data: () => ({\n    inputs: [],\n    watchers: [],\n    errorBag: {}\n  }),\n  watch: {\n    errorBag: {\n      handler(val) {\n        const errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput(input) {\n      const watcher = input => {\n        return input.$watch('hasError', val => {\n          this.$set(this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      const watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate() {\n      return this.inputs.filter(input => !input.validate(true)).length === 0;\n    },\n\n    /** @public */\n    reset() {\n      this.inputs.forEach(input => input.reset());\n      this.resetErrorBag();\n    },\n\n    resetErrorBag() {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation() {\n      this.inputs.forEach(input => input.resetValidation());\n      this.resetErrorBag();\n    },\n\n    register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n\n    unregister(input) {\n      const found = this.inputs.find(i => i._uid === input._uid);\n      if (!found) return;\n      const unwatch = this.watchers.find(i => i._uid === found._uid);\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid);\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid);\n      this.$delete(this.errorBag, found._uid);\n    }\n\n  },\n\n  render(h) {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$\n      },\n      on: {\n        submit: e => this.$emit('submit', e)\n      }\n    }, this.$slots.default);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["mixins","BindsAttrs","provide","RegistrableProvide","extend","name","form","inheritAttrs","props","disabled","Boolean","lazyValidation","readonly","value","data","inputs","watchers","errorBag","watch","handler","val","errors","Object","values","includes","$emit","deep","immediate","methods","watchInput","input","watcher","$watch","$set","_uid","valid","shouldValidate","hasOwnProperty","validate","filter","length","reset","forEach","resetErrorBag","setTimeout","resetValidation","register","push","unregister","found","find","i","unwatch","$delete","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","default"],"sourceRoot":"","sources":["../../../src/components/VForm/VForm.ts"],"sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}