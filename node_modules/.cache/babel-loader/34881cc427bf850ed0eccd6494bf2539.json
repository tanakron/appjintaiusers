{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\nexport default {\n  mixins: [validationMixin],\n  validations: {\n    name: {\n      required: required,\n      maxLength: maxLength(10)\n    },\n    email: {\n      required: required,\n      email: email\n    },\n    select: {\n      required: required\n    },\n    checkbox: {\n      checked: function checked(val) {\n        return val;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      name: \"\",\n      email: \"\",\n      select: null,\n      items: [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"],\n      checkbox: false\n    };\n  },\n  computed: {\n    checkboxErrors: function checkboxErrors() {\n      var errors = [];\n      if (!this.$v.checkbox.$dirty) return errors;\n      !this.$v.checkbox.checked && errors.push(\"You must agree to continue!\");\n      return errors;\n    },\n    selectErrors: function selectErrors() {\n      var errors = [];\n      if (!this.$v.select.$dirty) return errors;\n      !this.$v.select.required && errors.push(\"Item is required\");\n      return errors;\n    },\n    nameErrors: function nameErrors() {\n      var errors = [];\n      if (!this.$v.name.$dirty) return errors;\n      !this.$v.name.maxLength && errors.push(\"Name must be at most 10 characters long\");\n      !this.$v.name.required && errors.push(\"Name is required.\");\n      return errors;\n    },\n    emailErrors: function emailErrors() {\n      var errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\n      !this.$v.email.required && errors.push(\"E-mail is required\");\n      return errors;\n    }\n  },\n  methods: {\n    submit: function submit() {\n      this.$v.$touch();\n    },\n    clear: function clear() {\n      this.$v.$reset();\n      this.name = \"\";\n      this.email = \"\";\n      this.select = null;\n      this.checkbox = false;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AAEA;AACAA,2BADA;AAGAC;AACAC;AAAAC;AAAAC;AAAA,KADA;AAEAC;AAAAF;AAAAE;AAAA,KAFA;AAGAC;AAAAH;AAAA,KAHA;AAIAI;AACAC,aADA,mBACAC,GADA,EACA;AACA;AACA;AAHA;AAJA,GAHA;AAcAC;AAAA;AACAR,cADA;AAEAG,eAFA;AAGAC,kBAHA;AAIAK,qDAJA;AAKAJ;AALA;AAAA,GAdA;AAsBAK;AACAC,kBADA,4BACA;AACA;AACA;AACA;AACA;AACA,KANA;AAOAC,gBAPA,0BAOA;AACA;AACA;AACA;AACA;AACA,KAZA;AAaAC,cAbA,wBAaA;AACA;AACA;AACA,iCACAC,sDADA;AAEA;AACA;AACA,KApBA;AAqBAC,eArBA,yBAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,GAtBA;AAoDAC;AACAC,UADA,oBACA;AACA;AACA,KAHA;AAIAC,SAJA,mBAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AApDA","names":["mixins","validations","name","required","maxLength","email","select","checkbox","checked","val","data","items","computed","checkboxErrors","selectErrors","nameErrors","errors","emailErrors","methods","submit","clear"],"sourceRoot":"src/views/Login","sources":["Register.vue"],"sourcesContent":["<template>\n  <v-app>\n    <form>\n      <v-text-field\n        v-model=\"name\"\n        :error-messages=\"nameErrors\"\n        :counter=\"10\"\n        label=\"Name\"\n        required\n        @input=\"$v.name.$touch()\"\n        @blur=\"$v.name.$touch()\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"email\"\n        :error-messages=\"emailErrors\"\n        label=\"E-mail\"\n        required\n        @input=\"$v.email.$touch()\"\n        @blur=\"$v.email.$touch()\"\n      ></v-text-field>\n      <v-select\n        v-model=\"select\"\n        :items=\"items\"\n        :error-messages=\"selectErrors\"\n        label=\"Item\"\n        required\n        @change=\"$v.select.$touch()\"\n        @blur=\"$v.select.$touch()\"\n      ></v-select>\n      <v-checkbox\n        v-model=\"checkbox\"\n        :error-messages=\"checkboxErrors\"\n        label=\"Do you agree?\"\n        required\n        @change=\"$v.checkbox.$touch()\"\n        @blur=\"$v.checkbox.$touch()\"\n      ></v-checkbox>\n\n      <v-btn class=\"mr-4\" @click=\"submit\"> submit </v-btn>\n      <v-btn @click=\"clear\"> clear </v-btn>\n    </form>\n  </v-app>\n</template>\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required, maxLength, email } from \"vuelidate/lib/validators\";\n\nexport default {\n  mixins: [validationMixin],\n\n  validations: {\n    name: { required, maxLength: maxLength(10) },\n    email: { required, email },\n    select: { required },\n    checkbox: {\n      checked(val) {\n        return val;\n      },\n    },\n  },\n\n  data: () => ({\n    name: \"\",\n    email: \"\",\n    select: null,\n    items: [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"],\n    checkbox: false,\n  }),\n\n  computed: {\n    checkboxErrors() {\n      const errors = [];\n      if (!this.$v.checkbox.$dirty) return errors;\n      !this.$v.checkbox.checked && errors.push(\"You must agree to continue!\");\n      return errors;\n    },\n    selectErrors() {\n      const errors = [];\n      if (!this.$v.select.$dirty) return errors;\n      !this.$v.select.required && errors.push(\"Item is required\");\n      return errors;\n    },\n    nameErrors() {\n      const errors = [];\n      if (!this.$v.name.$dirty) return errors;\n      !this.$v.name.maxLength &&\n        errors.push(\"Name must be at most 10 characters long\");\n      !this.$v.name.required && errors.push(\"Name is required.\");\n      return errors;\n    },\n    emailErrors() {\n      const errors = [];\n      if (!this.$v.email.$dirty) return errors;\n      !this.$v.email.email && errors.push(\"Must be valid e-mail\");\n      !this.$v.email.required && errors.push(\"E-mail is required\");\n      return errors;\n    },\n  },\n\n  methods: {\n    submit() {\n      this.$v.$touch();\n    },\n    clear() {\n      this.$v.$reset();\n      this.name = \"\";\n      this.email = \"\";\n      this.select = null;\n      this.checkbox = false;\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}