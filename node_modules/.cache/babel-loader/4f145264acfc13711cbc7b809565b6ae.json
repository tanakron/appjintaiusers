{"ast":null,"code":"// Styles\nimport \"../../../src/components/VLabel/VLabel.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable';\nimport mixins from '../../util/mixins'; // Helpers\n\nimport { convertToUnit } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n  functional: true,\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    value: Boolean\n  },\n\n  render(h, ctx) {\n    const {\n      children,\n      listeners,\n      props\n    } = ctx;\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx)\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative'\n      },\n      ref: 'label'\n    };\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children);\n  }\n\n});","map":{"version":3,"mappings":"AAAA;AACA,OAAO,4CAAP,C,CAEA;;AACA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,IAAoBC,sBAApB,QAAkD,wBAAlD;AAIA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA;;AACA,eAAeD,MAAM,CAACF,SAAD,CAAN,CAAkBI,MAAlB,CAAyB;AACtCC,MAAI,EAAE,SADgC;AAGtCC,YAAU,EAAE,IAH0B;AAKtCC,OAAK,EAAE;AACLC,YAAQ,EAAEC,OADL;AAELC,SAAK,EAAE;AACLC,UAAI,EAAEC,MADD;AAELC,aAAO,EAAE;AAFJ,KAFF;AAMLC,YAAQ,EAAEL,OANL;AAOLM,WAAO,EAAEN,OAPJ;AAQLO,OAAG,EAAEJ,MARA;AASLK,QAAI,EAAE;AACJN,UAAI,EAAE,CAACO,MAAD,EAASN,MAAT,CADF;AAEJC,aAAO,EAAE;AAFL,KATD;AAaLM,SAAK,EAAE;AACLR,UAAI,EAAE,CAACO,MAAD,EAASN,MAAT,CADD;AAELC,aAAO,EAAE;AAFJ,KAbF;AAiBLO,SAAK,EAAEX;AAjBF,GAL+B;;AAyBtCY,QAAM,CAAEC,CAAF,EAAKC,GAAL,EAAQ;AACZ,UAAM;AAAEC,cAAF;AAAYC,eAAZ;AAAuBlB;AAAvB,QAAiCgB,GAAvC;AACA,UAAMG,IAAI,GAAG;AACXC,iBAAW,EAAE,SADF;AAEXC,WAAK,EAAE;AACL,2BAAmBrB,KAAK,CAACa,KADpB;AAEL,gCAAwBb,KAAK,CAACO,QAFzB;AAGL,WAAGb,sBAAsB,CAACsB,GAAD;AAHpB,OAFI;AAOXM,WAAK,EAAE;AACLb,WAAG,EAAET,KAAK,CAACS,GADN;AAEL,uBAAe,CAACT,KAAK,CAACS;AAFjB,OAPI;AAWXc,QAAE,EAAEL,SAXO;AAYXM,WAAK,EAAE;AACLd,YAAI,EAAEd,aAAa,CAACI,KAAK,CAACU,IAAP,CADd;AAELE,aAAK,EAAEhB,aAAa,CAACI,KAAK,CAACY,KAAP,CAFf;AAGLa,gBAAQ,EAAEzB,KAAK,CAACC,QAAN,GAAiB,UAAjB,GAA8B;AAHnC,OAZI;AAiBXyB,SAAG,EAAE;AAjBM,KAAb;AAoBA,WAAOX,CAAC,CAAC,OAAD,EAAUvB,SAAS,CAACmC,OAAV,CAAkBC,OAAlB,CAA0BC,YAA1B,CAAuC7B,KAAK,CAACQ,OAAN,IAAiBR,KAAK,CAACG,KAA9D,EAAqEgB,IAArE,CAAV,EAAsFF,QAAtF,CAAR;AACD;;AAhDqC,CAAzB,CAAf","names":["Colorable","Themeable","functionalThemeClasses","mixins","convertToUnit","extend","name","functional","props","absolute","Boolean","color","type","String","default","disabled","focused","for","left","Number","right","value","render","h","ctx","children","listeners","data","staticClass","class","attrs","on","style","position","ref","options","methods","setTextColor"],"sourceRoot":"","sources":["../../../src/components/VLabel/VLabel.ts"],"sourcesContent":["// Styles\nimport './VLabel.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n\n  functional: true,\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    value: Boolean,\n  },\n\n  render (h, ctx): VNode {\n    const { children, listeners, props } = ctx\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx),\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for,\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative',\n      },\n      ref: 'label',\n    }\n\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}