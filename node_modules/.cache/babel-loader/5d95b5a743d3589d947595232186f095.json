{"ast":null,"code":"// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\"; // Extensions\n\nimport VInput from '../VInput'; // Components\n\nimport VCounter from '../VCounter';\nimport VLabel from '../VLabel'; // Mixins\n\nimport Intersectable from '../../mixins/intersectable';\nimport Loadable from '../../mixins/loadable';\nimport Validatable from '../../mixins/validatable'; // Directives\n\nimport resize from '../../directives/resize';\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport { attachedRoot } from '../../util/dom';\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nimport { breaking, consoleWarn } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VInput, Intersectable({\n  onVisible: ['onResize', 'tryAutofocus']\n}), Loadable);\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-text-field',\n  directives: {\n    resize,\n    ripple\n  },\n  inheritAttrs: false,\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear'\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false\n  }),\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped\n      };\n    },\n\n    computedColor() {\n      const computedColor = Validatable.options.computed.computedColor.call(this);\n      if (!this.soloInverted || !this.isFocused) return computedColor;\n      return this.color || 'primary';\n    },\n\n    computedCounterValue() {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue);\n      }\n\n      return [...(this.internalValue || '').toString()].length;\n    },\n\n    hasCounter() {\n      return this.counter !== false && this.counter != null;\n    },\n\n    hasDetails() {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter;\n    },\n\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit('input', this.lazyValue);\n      }\n\n    },\n\n    isDirty() {\n      var _this$lazyValue;\n\n      return ((_this$lazyValue = this.lazyValue) == null ? void 0 : _this$lazyValue.toString().length) > 0 || this.badInput;\n    },\n\n    isEnclosed() {\n      return this.filled || this.isSolo || this.outlined;\n    },\n\n    isLabelActive() {\n      return this.isDirty || dirtyTypes.includes(this.type);\n    },\n\n    isSingle() {\n      return this.isSolo || this.singleLine || this.fullWidth || // https://material.io/components/text-fields/#filled-text-field\n      this.filled && !this.hasLabel;\n    },\n\n    isSolo() {\n      return this.solo || this.soloInverted;\n    },\n\n    labelPosition() {\n      let offset = this.prefix && !this.labelValue ? this.prefixWidth : 0;\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth;\n      return this.$vuetify.rtl === this.reverse ? {\n        left: offset,\n        right: 'auto'\n      } : {\n        left: 'auto',\n        right: offset\n      };\n    },\n\n    showLabel() {\n      return this.hasLabel && !(this.isSingle && this.labelValue);\n    },\n\n    labelValue() {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder;\n    }\n\n  },\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n\n    label() {\n      this.$nextTick(this.setLabelWidth);\n    },\n\n    prefix() {\n      this.$nextTick(this.setPrefixWidth);\n    },\n\n    isFocused: 'updateValue',\n\n    value(val) {\n      this.lazyValue = val;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this);\n    }\n    /* istanbul ignore next */\n\n\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this);\n    }\n    /* istanbul ignore if */\n\n\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this);\n    }\n  },\n\n  mounted() {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth);\n    this.autofocus && this.tryAutofocus();\n    requestAnimationFrame(() => {\n      this.isBooted = true;\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize();\n        }\n      });\n    });\n  },\n\n  methods: {\n    /** @public */\n    focus() {\n      this.onFocus();\n    },\n\n    /** @public */\n    blur(e) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur();\n      });\n    },\n\n    clearableCallback() {\n      this.$refs.input && this.$refs.input.focus();\n      this.$nextTick(() => this.internalValue = null);\n    },\n\n    genAppendSlot() {\n      const slot = [];\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer']);\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n\n    genPrependInnerSlot() {\n      const slot = [];\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner']);\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'));\n      }\n\n      return this.genSlot('prepend', 'inner', slot);\n    },\n\n    genIconSlot() {\n      const slot = [];\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'inner', slot);\n    },\n\n    genInputSlot() {\n      const input = VInput.options.methods.genInputSlot.call(this);\n      const prepend = this.genPrependInnerSlot();\n\n      if (prepend) {\n        input.children = input.children || [];\n        input.children.unshift(prepend);\n      }\n\n      return input;\n    },\n\n    genClearIcon() {\n      if (!this.clearable) return null; // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [this.$createElement('div')]);\n      }\n\n      return this.genSlot('append', 'inner', [this.genIcon('clear', this.clearableCallback)]);\n    },\n\n    genCounter() {\n      var _this$$scopedSlots$co, _this$$scopedSlots$co2, _this$$scopedSlots;\n\n      if (!this.hasCounter) return null;\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter;\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue\n      };\n      return (_this$$scopedSlots$co = (_this$$scopedSlots$co2 = (_this$$scopedSlots = this.$scopedSlots).counter) == null ? void 0 : _this$$scopedSlots$co2.call(_this$$scopedSlots, {\n        props\n      })) != null ? _this$$scopedSlots$co : this.$createElement(VCounter, {\n        props\n      });\n    },\n\n    genControl() {\n      return VInput.options.methods.genControl.call(this);\n    },\n\n    genDefaultSlot() {\n      return [this.genFieldset(), this.genTextFieldSlot(), this.genClearIcon(), this.genIconSlot(), this.genProgress()];\n    },\n\n    genFieldset() {\n      if (!this.outlined) return null;\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true\n        }\n      }, [this.genLegend()]);\n    },\n\n    genLabel() {\n      if (!this.showLabel) return null;\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      };\n      return this.$createElement(VLabel, data, this.$slots.label || this.label);\n    },\n\n    genLegend() {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0;\n      const span = this.$createElement('span', {\n        domProps: {\n          innerHTML: '&#8203;'\n        },\n        staticClass: 'notranslate'\n      });\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined\n        }\n      }, [span]);\n    },\n\n    genInput() {\n      const listeners = Object.assign({}, this.listeners$);\n      delete listeners.change; // Change should not be bound externally\n\n      const {\n        title,\n        ...inputAttrs\n      } = this.attrs$;\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.type === 'number' && Object.is(this.lazyValue, -0) ? '-0' : this.lazyValue\n        },\n        attrs: { ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: {\n            quiet: true\n          },\n          value: this.onResize\n        }]\n      });\n    },\n\n    genMessages() {\n      if (!this.showDetails) return null;\n      const messagesNode = VInput.options.methods.genMessages.call(this);\n      const counterNode = this.genCounter();\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [messagesNode, counterNode]);\n    },\n\n    genTextFieldSlot() {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, this.genInput(), this.suffix ? this.genAffix('suffix') : null]);\n    },\n\n    genAffix(type) {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type\n      }, this[type]);\n    },\n\n    onBlur(e) {\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick() {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return;\n      this.$refs.input.focus();\n    },\n\n    onFocus(e) {\n      if (!this.$refs.input) return;\n      const root = attachedRoot(this.$el);\n      if (!root) return;\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        e && this.$emit('focus', e);\n      }\n    },\n\n    onInput(e) {\n      const target = e.target;\n      this.internalValue = target.value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      if (e.keyCode === keyCodes.enter && this.lazyValue !== this.initialValue) {\n        this.initialValue = this.lazyValue;\n        this.$emit('change', this.initialValue);\n      }\n\n      this.$emit('keydown', e);\n    },\n\n    onMouseDown(e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e);\n    },\n\n    onMouseUp(e) {\n      if (this.hasMouseDown) this.focus();\n      VInput.options.methods.onMouseUp.call(this, e);\n    },\n\n    setLabelWidth() {\n      if (!this.outlined) return;\n      this.labelWidth = this.$refs.label ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, this.$el.offsetWidth - 24) : 0;\n    },\n\n    setPrefixWidth() {\n      if (!this.$refs.prefix) return;\n      this.prefixWidth = this.$refs.prefix.offsetWidth;\n    },\n\n    setPrependWidth() {\n      if (!this.outlined || !this.$refs['prepend-inner']) return;\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth;\n    },\n\n    tryAutofocus() {\n      if (!this.autofocus || typeof document === 'undefined' || !this.$refs.input) return false;\n      const root = attachedRoot(this.$el);\n      if (!root || root.activeElement === this.$refs.input) return false;\n      this.$refs.input.focus();\n      return true;\n    },\n\n    updateValue(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    },\n\n    onResize() {\n      this.setLabelWidth();\n      this.setPrefixWidth();\n      this.setPrependWidth();\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["VInput","VCounter","VLabel","Intersectable","Loadable","Validatable","resize","ripple","attachedRoot","convertToUnit","keyCodes","breaking","consoleWarn","mixins","baseMixins","onVisible","dirtyTypes","extend","name","directives","inheritAttrs","props","appendOuterIcon","String","autofocus","Boolean","clearable","clearIcon","type","default","counter","Number","counterValue","Function","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","persistentPlaceholder","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","options","call","isSingle","isSolo","isEnclosed","computedColor","isFocused","color","computedCounterValue","internalValue","toString","length","hasCounter","hasDetails","get","lazyValue","set","val","$emit","isDirty","isLabelActive","includes","hasLabel","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","watch","$nextTick","setLabelWidth","setPrefixWidth","value","created","$attrs","hasOwnProperty","mounted","$watch","tryAutofocus","requestAnimationFrame","isIntersecting","onResize","methods","focus","onFocus","blur","e","window","$refs","input","clearableCallback","genAppendSlot","slot","$slots","push","genIcon","genSlot","genPrependInnerSlot","genIconSlot","append","appendIcon","genInputSlot","prepend","children","unshift","genClearIcon","$createElement","genCounter","max","attrs$","maxlength","dark","light","$scopedSlots","_this$$scopedSlots$co2","genControl","genDefaultSlot","genFieldset","genTextFieldSlot","genProgress","attrs","genLegend","genLabel","absolute","validationState","disabled","isDisabled","focused","for","computedId","width","span","domProps","innerHTML","staticClass","style","undefined","genInput","listeners","Object","assign","listeners$","change","title","inputAttrs","is","id","readonly","isReadonly","on","onBlur","onInput","keydown","onKeyDown","ref","modifiers","quiet","genMessages","showDetails","messagesNode","counterNode","genAffix","class","onClick","root","$el","activeElement","target","validity","keyCode","enter","onMouseDown","preventDefault","stopPropagation","onMouseUp","hasMouseDown","Math","min","scrollWidth","offsetWidth","setPrependWidth","document","updateValue","hasColor"],"sourceRoot":"","sources":["../../../src/components/VTextField/VTextField.ts"],"sourcesContent":["// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n    this.autofocus && this.tryAutofocus()\n    requestAnimationFrame(() => {\n      this.isBooted = true\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize()\n        }\n      })\n    })\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}