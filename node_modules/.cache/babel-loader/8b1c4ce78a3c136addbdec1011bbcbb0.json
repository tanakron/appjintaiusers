{"ast":null,"code":"import Vue from 'vue';\nimport { getObjectValueByPath } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'row',\n  functional: true,\n  props: {\n    headers: Array,\n    hideDefaultHeader: Boolean,\n    index: Number,\n    item: Object,\n    rtl: Boolean\n  },\n\n  render(h, {\n    props,\n    slots,\n    data\n  }) {\n    const computedSlots = slots();\n    const columns = props.headers.map(header => {\n      const classes = {\n        'v-data-table__mobile-row': true\n      };\n      const children = [];\n      const value = getObjectValueByPath(props.item, header.value);\n      const slotName = header.value;\n      const scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName];\n      const regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName];\n\n      if (scopedSlot) {\n        children.push(scopedSlot({\n          item: props.item,\n          isMobile: true,\n          header,\n          index: props.index,\n          value\n        }));\n      } else if (regularSlot) {\n        children.push(regularSlot);\n      } else {\n        children.push(value == null ? value : String(value));\n      }\n\n      const mobileRowChildren = [h('div', {\n        staticClass: 'v-data-table__mobile-row__cell'\n      }, children)];\n\n      if (header.value !== 'dataTableSelect' && !props.hideDefaultHeader) {\n        mobileRowChildren.unshift(h('div', {\n          staticClass: 'v-data-table__mobile-row__header'\n        }, [header.text]));\n      }\n\n      return h('td', {\n        class: classes\n      }, mobileRowChildren);\n    });\n    return h('tr', { ...data,\n      staticClass: 'v-data-table__mobile-table-row'\n    }, columns);\n  }\n\n});","map":{"version":3,"mappings":"AAAA,OAAOA,GAAP,MAAqC,KAArC;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAGA,eAAeD,GAAG,CAACE,MAAJ,CAAW;AACxBC,MAAI,EAAE,KADkB;AAGxBC,YAAU,EAAE,IAHY;AAKxBC,OAAK,EAAE;AACLC,WAAO,EAAEC,KADJ;AAELC,qBAAiB,EAAEC,OAFd;AAGLC,SAAK,EAAEC,MAHF;AAILC,QAAI,EAAEC,MAJD;AAKLC,OAAG,EAAEL;AALA,GALiB;;AAaxBM,QAAM,CAAEC,CAAF,EAAK;AAAEX,SAAF;AAASY,SAAT;AAAgBC;AAAhB,GAAL,EAA2B;AAC/B,UAAMC,aAAa,GAAGF,KAAK,EAA3B;AAEA,UAAMG,OAAO,GAAYf,KAAK,CAACC,OAAN,CAAce,GAAd,CAAmBC,MAAD,IAA4B;AACrE,YAAMC,OAAO,GAAG;AACd,oCAA4B;AADd,OAAhB;AAIA,YAAMC,QAAQ,GAAG,EAAjB;AACA,YAAMC,KAAK,GAAGxB,oBAAoB,CAACI,KAAK,CAACO,IAAP,EAAaU,MAAM,CAACG,KAApB,CAAlC;AAEA,YAAMC,QAAQ,GAAGJ,MAAM,CAACG,KAAxB;AACA,YAAME,UAAU,GAAGT,IAAI,CAACU,WAAL,IAAoBV,IAAI,CAACU,WAAL,CAAiBC,cAAjB,CAAgCH,QAAhC,CAApB,IAAiER,IAAI,CAACU,WAAL,CAAiBF,QAAjB,CAApF;AACA,YAAMI,WAAW,GAAGX,aAAa,CAACU,cAAd,CAA6BH,QAA7B,KAA0CP,aAAa,CAACO,QAAD,CAA3E;;AAEA,UAAIC,UAAJ,EAAgB;AACdH,gBAAQ,CAACO,IAAT,CAAcJ,UAAU,CAAC;AACvBf,cAAI,EAAEP,KAAK,CAACO,IADW;AAEvBoB,kBAAQ,EAAE,IAFa;AAGvBV,gBAHuB;AAIvBZ,eAAK,EAAEL,KAAK,CAACK,KAJU;AAKvBe;AALuB,SAAD,CAAxB;AADF,aAQO,IAAIK,WAAJ,EAAiB;AACtBN,gBAAQ,CAACO,IAAT,CAAcD,WAAd;AADK,aAEA;AACLN,gBAAQ,CAACO,IAAT,CAAcN,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBQ,MAAM,CAACR,KAAD,CAA5C;AACD;;AAED,YAAMS,iBAAiB,GAAG,CACxBlB,CAAC,CAAC,KAAD,EAAQ;AACPmB,mBAAW,EAAE;AADN,OAAR,EAEEX,QAFF,CADuB,CAA1B;;AAMA,UAAIF,MAAM,CAACG,KAAP,KAAiB,iBAAjB,IAAsC,CAACpB,KAAK,CAACG,iBAAjD,EAAoE;AAClE0B,yBAAiB,CAACE,OAAlB,CACEpB,CAAC,CAAC,KAAD,EAAQ;AACPmB,qBAAW,EAAE;AADN,SAAR,EAEE,CAACb,MAAM,CAACe,IAAR,CAFF,CADH;AAKD;;AAED,aAAOrB,CAAC,CAAC,IAAD,EAAO;AAAEsB,aAAK,EAAEf;AAAT,OAAP,EAA2BW,iBAA3B,CAAR;AAxCuB,MAAzB;AA2CA,WAAOlB,CAAC,CAAC,IAAD,EAAO,EAAE,GAAGE,IAAL;AAAWiB,iBAAW,EAAE;AAAxB,KAAP,EAAmEf,OAAnE,CAAR;AACD;;AA5DuB,CAAX,CAAf","names":["Vue","getObjectValueByPath","extend","name","functional","props","headers","Array","hideDefaultHeader","Boolean","index","Number","item","Object","rtl","render","h","slots","data","computedSlots","columns","map","header","classes","children","value","slotName","scopedSlot","scopedSlots","hasOwnProperty","regularSlot","push","isMobile","String","mobileRowChildren","staticClass","unshift","text","class"],"sourceRoot":"","sources":["../../../src/components/VDataTable/MobileRow.ts"],"sourcesContent":["import Vue, { VNode, PropType } from 'vue'\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { DataTableHeader } from 'vuetify/types'\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropType<DataTableHeader[]>,\n    hideDefaultHeader: Boolean,\n    index: Number,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns: VNode[] = props.headers.map((header: DataTableHeader) => {\n      const classes = {\n        'v-data-table__mobile-row': true,\n      }\n\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName]\n      const regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(scopedSlot({\n          item: props.item,\n          isMobile: true,\n          header,\n          index: props.index,\n          value,\n        }))\n      } else if (regularSlot) {\n        children.push(regularSlot)\n      } else {\n        children.push(value == null ? value : String(value))\n      }\n\n      const mobileRowChildren = [\n        h('div', {\n          staticClass: 'v-data-table__mobile-row__cell',\n        }, children),\n      ]\n\n      if (header.value !== 'dataTableSelect' && !props.hideDefaultHeader) {\n        mobileRowChildren.unshift(\n          h('div', {\n            staticClass: 'v-data-table__mobile-row__header',\n          }, [header.text])\n        )\n      }\n\n      return h('td', { class: classes }, mobileRowChildren)\n    })\n\n    return h('tr', { ...data, staticClass: 'v-data-table__mobile-table-row' }, columns)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}