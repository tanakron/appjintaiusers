{"ast":null,"code":"import { deprecate } from '../../util/console';\nimport Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'mobile',\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String],\n\n      default() {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify ? this.$vuetify.breakpoint.mobileBreakpoint : undefined;\n      },\n\n      validator: v => !isNaN(Number(v)) || ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n    }\n  },\n  computed: {\n    isMobile() {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint\n      } = this.$vuetify.breakpoint; // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile;\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10);\n      const isNumber = !isNaN(mobileWidth);\n      return isNumber ? width < mobileWidth : name === this.mobileBreakpoint;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this);\n    }\n  }\n\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,GAAP,MAA8B,KAA9B;AAEA;;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,MAAI,EAAE,QADkB;AAGxBC,OAAK,EAAE;AACLC,oBAAgB,EAAE;AAChBC,UAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADU;;AAEhBC,aAAO;AACL;AACA;AACA,eAAO,KAAKC,QAAL,GACH,KAAKA,QAAL,CAAcC,UAAd,CAAyBN,gBADtB,GAEHO,SAFJ;AALc;;AAShBC,eAAS,EAAEC,CAAC,IACV,CAACC,KAAK,CAACR,MAAM,CAACO,CAAD,CAAP,CAAN,IACA,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BE,QAA/B,CAAwCR,MAAM,CAACM,CAAD,CAA9C;AAXc;AADb,GAHiB;AAoBxBG,UAAQ,EAAE;AACRC,YAAQ;AACN,YAAM;AACJC,cADI;AAEJC,aAFI;AAGJjB,YAHI;AAIJE;AAJI,UAKF,KAAKK,QAAL,CAAcC,UALlB,CADM,CAQN;AACA;;AACA,UAAIN,gBAAgB,KAAK,KAAKA,gBAA9B,EAAgD,OAAOc,MAAP;AAEhD,YAAME,WAAW,GAAGC,QAAQ,CAAC,KAAKjB,gBAAN,EAAwB,EAAxB,CAA5B;AACA,YAAMkB,QAAQ,GAAG,CAACR,KAAK,CAACM,WAAD,CAAvB;AAEA,aAAOE,QAAQ,GACXH,KAAK,GAAGC,WADG,GAEXlB,IAAI,KAAK,KAAKE,gBAFlB;AAGD;;AAnBO,GApBc;;AA0CxBmB,SAAO;AACL;AACA,QAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2B,oBAA3B,CAAJ,EAAsD;AACpD1B,eAAS,CAAC,oBAAD,EAAuB,mBAAvB,EAA4C,IAA5C,CAAT;AACD;AACF;;AA/CuB,CAAX,CAAf","names":["deprecate","Vue","extend","name","props","mobileBreakpoint","type","Number","String","default","$vuetify","breakpoint","undefined","validator","v","isNaN","includes","computed","isMobile","mobile","width","mobileWidth","parseInt","isNumber","created","$attrs","hasOwnProperty"],"sourceRoot":"","sources":["../../../src/mixins/mobile/index.ts"],"sourcesContent":["// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}