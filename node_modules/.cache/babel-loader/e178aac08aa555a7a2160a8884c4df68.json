{"ast":null,"code":"// Styles\nimport \"../../../src/components/VList/VListGroup.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VListItem from './VListItem';\nimport VListItemIcon from './VListItemIcon'; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport Toggleable from '../../mixins/toggleable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Transitions\n\nimport { VExpandTransition } from '../transitions'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getSlot } from '../../util/helpers';\nconst baseMixins = mixins(BindsAttrs, Bootable, Colorable, RegistrableInject('list'), Toggleable);\nexport default baseMixins.extend().extend({\n  name: 'v-list-group',\n  directives: {\n    ripple\n  },\n  props: {\n    activeClass: {\n      type: String,\n      default: ''\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand'\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    disabled: Boolean,\n    group: [String, RegExp],\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    },\n    subGroup: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup\n      };\n    }\n\n  },\n  watch: {\n    isActive(val) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid);\n      }\n    },\n\n    $route: 'onRouteChange'\n  },\n\n  created() {\n    this.list && this.list.register(this);\n\n    if (this.group && this.$route && this.value == null) {\n      this.isActive = this.matchRoute(this.$route.path);\n    }\n  },\n\n  beforeDestroy() {\n    this.list && this.list.unregister(this);\n  },\n\n  methods: {\n    click(e) {\n      if (this.disabled) return;\n      this.isBooted = true;\n      this.$emit('click', e);\n      this.$nextTick(() => this.isActive = !this.isActive);\n    },\n\n    genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n\n    genAppendIcon() {\n      const icon = !this.subGroup ? this.appendIcon : false;\n      if (!icon && !this.$slots.appendIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon'\n      }, [this.$slots.appendIcon || this.genIcon(icon)]);\n    },\n\n    genHeader() {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button'\n        },\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        props: {\n          inputValue: this.isActive\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: { ...this.listeners$,\n          click: this.click\n        }\n      }, [this.genPrependIcon(), this.$slots.activator, this.genAppendIcon()]);\n    },\n\n    genItems() {\n      return this.showLazyContent(() => [this.$createElement('div', {\n        staticClass: 'v-list-group__items',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, getSlot(this))]);\n    },\n\n    genPrependIcon() {\n      const icon = this.subGroup && this.prependIcon == null ? '$subgroup' : this.prependIcon;\n      if (!icon && !this.$slots.prependIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon'\n      }, [this.$slots.prependIcon || this.genIcon(icon)]);\n    },\n\n    onRouteChange(to) {\n      /* istanbul ignore if */\n      if (!this.group) return;\n      const isActive = this.matchRoute(to.path);\n      /* istanbul ignore else */\n\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid);\n      }\n\n      this.isActive = isActive;\n    },\n\n    toggle(uid) {\n      const isActive = this._uid === uid;\n      if (isActive) this.isBooted = true;\n      this.$nextTick(() => this.isActive = isActive);\n    },\n\n    matchRoute(to) {\n      return to.match(this.group) !== null;\n    }\n\n  },\n\n  render(h) {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes\n    }), [this.genHeader(), h(VExpandTransition, this.genItems())]);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VIcon","VListItem","VListItemIcon","BindsAttrs","Bootable","Colorable","Toggleable","inject","RegistrableInject","ripple","VExpandTransition","mixins","getSlot","baseMixins","extend","name","directives","props","activeClass","type","String","default","appendIcon","color","disabled","Boolean","group","RegExp","noAction","prependIcon","Object","subGroup","computed","classes","isActive","watch","val","list","listClick","_uid","$route","created","register","value","matchRoute","path","beforeDestroy","unregister","methods","click","e","isBooted","$emit","$nextTick","genIcon","icon","$createElement","genAppendIcon","$slots","staticClass","genHeader","attrs","role","class","inputValue","on","listeners$","genPrependIcon","activator","genItems","showLazyContent","onRouteChange","to","toggle","uid","match","render","h","setTextColor"],"sourceRoot":"","sources":["../../../src/components/VList/VListGroup.ts"],"sourcesContent":["// Styles\nimport './VListGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VList from './VList'\nimport VListItem from './VListItem'\nimport VListItemIcon from './VListItemIcon'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Transitions\nimport { VExpandTransition } from '../transitions'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { Route } from 'vue-router'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Bootable,\n  Colorable,\n  RegistrableInject('list'),\n  Toggleable\n)\n\ntype VListInstance = InstanceType<typeof VList>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  list: VListInstance\n  $refs: {\n    group: HTMLElement\n  }\n  $route: Route\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-group',\n\n  directives: { ripple },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    group: [String, RegExp],\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    subGroup: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val: boolean) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid)\n      }\n    },\n    $route: 'onRouteChange',\n  },\n\n  created () {\n    this.list && this.list.register(this)\n\n    if (this.group &&\n      this.$route &&\n      this.value == null\n    ) {\n      this.isActive = this.matchRoute(this.$route.path)\n    }\n  },\n\n  beforeDestroy () {\n    this.list && this.list.unregister(this)\n  },\n\n  methods: {\n    click (e: Event) {\n      if (this.disabled) return\n\n      this.isBooted = true\n\n      this.$emit('click', e)\n      this.$nextTick(() => (this.isActive = !this.isActive))\n    },\n    genIcon (icon: string | false): VNode {\n      return this.$createElement(VIcon, icon)\n    },\n    genAppendIcon (): VNode | null {\n      const icon = !this.subGroup ? this.appendIcon : false\n\n      if (!icon && !this.$slots.appendIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon',\n      }, [\n        this.$slots.appendIcon || this.genIcon(icon),\n      ])\n    },\n    genHeader (): VNode {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button',\n        },\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        props: {\n          inputValue: this.isActive,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple,\n        }],\n        on: {\n          ...this.listeners$,\n          click: this.click,\n        },\n      }, [\n        this.genPrependIcon(),\n        this.$slots.activator,\n        this.genAppendIcon(),\n      ])\n    },\n    genItems (): VNode[] {\n      return this.showLazyContent(() => [\n        this.$createElement('div', {\n          staticClass: 'v-list-group__items',\n          directives: [{\n            name: 'show',\n            value: this.isActive,\n          }],\n        }, getSlot(this)),\n      ])\n    },\n    genPrependIcon (): VNode | null {\n      const icon = this.subGroup && this.prependIcon == null\n        ? '$subgroup'\n        : this.prependIcon\n\n      if (!icon && !this.$slots.prependIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon',\n      }, [\n        this.$slots.prependIcon || this.genIcon(icon),\n      ])\n    },\n    onRouteChange (to: Route) {\n      /* istanbul ignore if */\n      if (!this.group) return\n\n      const isActive = this.matchRoute(to.path)\n\n      /* istanbul ignore else */\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid)\n      }\n\n      this.isActive = isActive\n    },\n    toggle (uid: number) {\n      const isActive = this._uid === uid\n\n      if (isActive) this.isBooted = true\n      this.$nextTick(() => (this.isActive = isActive))\n    },\n    matchRoute (to: string) {\n      return to.match(this.group) !== null\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes,\n    }), [\n      this.genHeader(),\n      h(VExpandTransition, this.genItems()),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}